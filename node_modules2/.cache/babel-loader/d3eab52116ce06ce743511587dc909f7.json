{"ast":null,"code":"var _jsxFileName = \"/home/gbowne1/react_test/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport flash from 'connect-flash';\nimport Home from './Home';\nimport { StatusBar } from \"expo-status-bar\";\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [theme, setTheme] = useState('light');\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-intro\",\n        children: [\"To get started, edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 32\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n/*#__PURE__*/\n_jsxDEV(\"div\", {\n  className: \"App\",\n  children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 1\n}, this);\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar cookieParser = require('cookie-parser');\n\nvar bodyParser = require('body-parser');\n\nvar exphbs = require('express-handlebars');\n\nvar expressValidator = require('express-validator');\n\nvar session = require('express-session');\n\nvar passport = require('passport');\n\nvar LocalStrategy = require('passport-local').Strategy;\n\nvar postgres = require('postgres');\n\npostgres.connect('postgres://localhost/loginapp');\nvar db = postgres,\n    async,\n    connection;\n\nvar routes = require('./router/index').default;\n\nvar users = require('/router/users'); // Init App\n\n\nvar app = Express();\n\nvar server = require(\"http\").Server(app);\n\nvar io = require(\"socket.io\")(server); // View Engine\n\n\napp.set('views', path.join(__dirname, 'views'));\napp.engine('handlebars', exphbs({\n  defaultLayout: 'layout'\n}));\napp.set('view engine', 'handlebars'); // BodyParser Middleware\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(cookieParser()); // Set Static Folder\n\napp.use(express.static(path.join(__dirname, 'public'))); // Express Session\n\napp.use(session({\n  secret: 'secret',\n  saveUninitialized: true,\n  resave: true\n})); // Passport init\n\napp.use(passport.initialize());\napp.use(passport.session()); // Express Validator\n\napp.use(expressValidator({\n  errorFormatter: function (param, msg, value) {\n    var namespace = param.split('.'),\n        root = namespace.shift(),\n        formParam = root;\n\n    while (namespace.length) {\n      formParam += '[' + namespace.shift() + ']';\n    }\n\n    return {\n      param: formParam,\n      msg: msg,\n      value: value\n    };\n  }\n})); // Connect Flash\n\napp.use(flash()); // Global Vars\n\napp.use(function (req, res, next) {\n  res.locals.success_msg = req.flash('success_msg');\n  res.locals.error_msg = req.flash('error_msg');\n  res.locals.error = req.flash('error');\n  res.locals.user = req.user || null;\n  next();\n});\napp.use('/', routes);\napp.use('/users', users);\nserver.listen(process.env.PORT || 3000, function () {\n  console.log(\"Express server listening on port %d in %s mode\", this.address().port, app.settings.env);\n}); // The function that toggles between themes\n\nfunction toggleTheme() {\n  if (theme === 'light') {\n    setTheme('dark');\n  } else {\n    setTheme('light');\n  }\n} // Return the layout based on the current theme\n\n\n/*#__PURE__*/\n_jsxDEV(Admin, {\n  dataProvider: dataProvider,\n  children: [\"-       \", /*#__PURE__*/_jsxDEV(Resource, {\n    name: \"users\",\n    list: ListGuesser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 13\n  }, this), \"+       \", /*#__PURE__*/_jsxDEV(Resource, {\n    name: \"users\",\n    list: UserList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 129,\n  columnNumber: 3\n}, this);\n\nexport default 'App';","map":{"version":3,"sources":["/home/gbowne1/react_test/src/App.js"],"names":["React","Component","BrowserRouter","Switch","Route","NavLink","flash","Home","StatusBar","ThemeProvider","lightTheme","darkTheme","theme","setTheme","useState","App","render","logo","express","require","path","cookieParser","bodyParser","exphbs","expressValidator","session","passport","LocalStrategy","Strategy","postgres","connect","db","async","connection","routes","default","users","app","Express","server","Server","io","set","join","__dirname","engine","defaultLayout","use","json","urlencoded","extended","static","secret","saveUninitialized","resave","initialize","errorFormatter","param","msg","value","namespace","split","root","shift","formParam","length","req","res","next","locals","success_msg","error_msg","error","user","listen","process","env","PORT","console","log","address","port","settings","toggleTheme","dataProvider","ListGuesser","UserList"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,OAAvC,QAAsD,kBAAtD;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,SAAtC;;AAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,OAAD,CAAlC;;AAEA,MAAMC,GAAN,SAAkBd,SAAlB,CAA4B;AAC1Be,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,yDACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADvB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAbyB;;AAgB5B;AAAA;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA,yBACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;;AAIA,IAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,oBAAD,CAApB;;AACA,IAAIK,gBAAgB,GAAGL,OAAO,CAAC,mBAAD,CAA9B;;AAEA,IAAIM,OAAO,GAAGN,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAIO,QAAQ,GAAGP,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIQ,aAAa,GAAGR,OAAO,CAAC,gBAAD,CAAP,CAA0BS,QAA9C;;AACA,IAAIC,QAAQ,GAAGV,OAAO,CAAC,UAAD,CAAtB;;AACAU,QAAQ,CAACC,OAAT,CAAiB,+BAAjB;AACA,IAAIC,EAAE,GAAGF,QAAT;AAAA,IAAmBG,KAAnB;AAAA,IAAyBC,UAAzB;;AAEA,IAAIC,MAAM,GAAGf,OAAO,CAAC,gBAAD,CAAP,CAA0BgB,OAAvC;;AACA,IAAIC,KAAK,GAAGjB,OAAO,CAAC,eAAD,CAAnB,C,CAEA;;;AACA,IAAIkB,GAAG,GAAGC,OAAO,EAAjB;;AACA,IAAIC,MAAM,GAAGpB,OAAO,CAAC,MAAD,CAAP,CAAgBqB,MAAhB,CAAuBH,GAAvB,CAAb;;AACA,IAAII,EAAE,GAAGtB,OAAO,CAAC,WAAD,CAAP,CAAqBoB,MAArB,CAAT,C,CAEA;;;AACAF,GAAG,CAACK,GAAJ,CAAQ,OAAR,EAAiBtB,IAAI,CAACuB,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAP,GAAG,CAACQ,MAAJ,CAAW,YAAX,EAAyBtB,MAAM,CAAC;AAAEuB,EAAAA,aAAa,EAAE;AAAjB,CAAD,CAA/B;AACAT,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAuB,YAAvB,E,CAEA;;AACAL,GAAG,CAACU,GAAJ,CAAQzB,UAAU,CAAC0B,IAAX,EAAR;AACAX,GAAG,CAACU,GAAJ,CAAQzB,UAAU,CAAC2B,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAb,GAAG,CAACU,GAAJ,CAAQ1B,YAAY,EAApB,E,CAEA;;AACAgB,GAAG,CAACU,GAAJ,CAAQ7B,OAAO,CAACiC,MAAR,CAAe/B,IAAI,CAACuB,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR,E,CAEA;;AACAP,GAAG,CAACU,GAAJ,CAAQtB,OAAO,CAAC;AACd2B,EAAAA,MAAM,EAAE,QADM;AAEdC,EAAAA,iBAAiB,EAAE,IAFL;AAGdC,EAAAA,MAAM,EAAE;AAHM,CAAD,CAAf,E,CAMA;;AACAjB,GAAG,CAACU,GAAJ,CAAQrB,QAAQ,CAAC6B,UAAT,EAAR;AACAlB,GAAG,CAACU,GAAJ,CAAQrB,QAAQ,CAACD,OAAT,EAAR,E,CAEA;;AACAY,GAAG,CAACU,GAAJ,CAAQvB,gBAAgB,CAAC;AACvBgC,EAAAA,cAAc,EAAE,UAAUC,KAAV,EAAiBC,GAAjB,EAAsBC,KAAtB,EAA6B;AAC3C,QAAIC,SAAS,GAAGH,KAAK,CAACI,KAAN,CAAY,GAAZ,CAAhB;AAAA,QACIC,IAAI,GAAGF,SAAS,CAACG,KAAV,EADX;AAAA,QAEIC,SAAS,GAAGF,IAFhB;;AAIA,WAAOF,SAAS,CAACK,MAAjB,EAAyB;AACvBD,MAAAA,SAAS,IAAI,MAAMJ,SAAS,CAACG,KAAV,EAAN,GAA0B,GAAvC;AACD;;AACD,WAAO;AACLN,MAAAA,KAAK,EAAEO,SADF;AAELN,MAAAA,GAAG,EAAEA,GAFA;AAGLC,MAAAA,KAAK,EAAEA;AAHF,KAAP;AAKD;AAdsB,CAAD,CAAxB,E,CAiBA;;AACAtB,GAAG,CAACU,GAAJ,CAAQzC,KAAK,EAAb,E,CAEA;;AACA+B,GAAG,CAACU,GAAJ,CAAQ,UAAUmB,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAChCD,EAAAA,GAAG,CAACE,MAAJ,CAAWC,WAAX,GAAyBJ,GAAG,CAAC5D,KAAJ,CAAU,aAAV,CAAzB;AACA6D,EAAAA,GAAG,CAACE,MAAJ,CAAWE,SAAX,GAAuBL,GAAG,CAAC5D,KAAJ,CAAU,WAAV,CAAvB;AACA6D,EAAAA,GAAG,CAACE,MAAJ,CAAWG,KAAX,GAAmBN,GAAG,CAAC5D,KAAJ,CAAU,OAAV,CAAnB;AACA6D,EAAAA,GAAG,CAACE,MAAJ,CAAWI,IAAX,GAAkBP,GAAG,CAACO,IAAJ,IAAY,IAA9B;AACAL,EAAAA,IAAI;AACL,CAND;AAQA/B,GAAG,CAACU,GAAJ,CAAQ,GAAR,EAAab,MAAb;AACAG,GAAG,CAACU,GAAJ,CAAQ,QAAR,EAAkBX,KAAlB;AAEAG,MAAM,CAACmC,MAAP,CAAcC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAlC,EAAwC,YAAY;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ,EAA8D,KAAKC,OAAL,GAAeC,IAA7E,EAAmF5C,GAAG,CAAC6C,QAAJ,CAAaN,GAAhG;AACD,CAFD,E,CAIA;;AAGE,SAASO,WAAT,GAAuB;AACvB,MAAIvE,KAAK,KAAK,OAAd,EAAuB;AACrBC,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACD,GAFD,MAEO;AACLA,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;AACF,C,CAEC;;;AAEA;AAAA,QAAC,KAAD;AAAO,EAAA,YAAY,EAAEuE,YAArB;AAAA,sCACU,QAAC,QAAD;AAAU,IAAA,IAAI,EAAC,OAAf;AAAuB,IAAA,IAAI,EAAEC;AAA7B;AAAA;AAAA;AAAA;AAAA,UADV,2BAEM,QAAC,QAAD;AAAU,IAAA,IAAI,EAAC,OAAf;AAAuB,IAAA,IAAI,EAAEC;AAA7B;AAAA;AAAA;AAAA;AAAA,UAFN;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMF,eAAe,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport flash from 'connect-flash';\nimport Home from './Home';\nimport { StatusBar } from \"expo-status-bar\";\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\n\nconst [theme, setTheme] = useState('light');\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h2>Welcome to React</h2>\n        </div>\n        <p className=\"App-intro\">\n          To get started, edit <code>src/App.js</code> and save to reload.\n        </p>\n      </div>\n    );\n  }\n}\n\n<div className=\"App\">\n  <Navbar />\n</div>\n\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar exphbs = require('express-handlebars');\nvar expressValidator = require('express-validator');\n\nvar session = require('express-session');\nvar passport = require('passport');\nvar LocalStrategy = require('passport-local').Strategy;\nvar postgres = require('postgres');\npostgres.connect('postgres://localhost/loginapp');\nvar db = postgres, async,connection;\n\nvar routes = require('./router/index').default;\nvar users = require('/router/users');\n\n// Init App\nvar app = Express();\nvar server = require(\"http\").Server(app);\nvar io = require(\"socket.io\")(server);\n\n// View Engine\napp.set('views', path.join(__dirname, 'views'));\napp.engine('handlebars', exphbs({ defaultLayout: 'layout' }));\napp.set('view engine', 'handlebars');\n\n// BodyParser Middleware\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n\n// Set Static Folder\napp.use(express.static(path.join(__dirname, 'public')));\n\n// Express Session\napp.use(session({\n  secret: 'secret',\n  saveUninitialized: true,\n  resave: true\n}));\n\n// Passport init\napp.use(passport.initialize());\napp.use(passport.session());\n\n// Express Validator\napp.use(expressValidator({\n  errorFormatter: function (param, msg, value) {\n    var namespace = param.split('.')\n      , root = namespace.shift()\n      , formParam = root;\n\n    while (namespace.length) {\n      formParam += '[' + namespace.shift() + ']';\n    }\n    return {\n      param: formParam,\n      msg: msg,\n      value: value\n    };\n  }\n}));\n\n// Connect Flash\napp.use(flash());\n\n// Global Vars\napp.use(function (req, res, next) {\n  res.locals.success_msg = req.flash('success_msg');\n  res.locals.error_msg = req.flash('error_msg');\n  res.locals.error = req.flash('error');\n  res.locals.user = req.user || null;\n  next();\n});\n\napp.use('/', routes);\napp.use('/users', users);\n\nserver.listen(process.env.PORT || 3000, function () {\n  console.log(\"Express server listening on port %d in %s mode\", this.address().port, app.settings.env);\n});\n\n// The function that toggles between themes\n\n \n  function toggleTheme() {\n  if (theme === 'light') {\n    setTheme('dark');\n  } else {\n    setTheme('light');\n  }\n}\n\n  // Return the layout based on the current theme\n\n  <Admin dataProvider={dataProvider}>\n    -       <Resource name=\"users\" list={ListGuesser} />\n+       <Resource name=\"users\" list={UserList} />\n  </Admin>\n;\n\nexport default 'App'"]},"metadata":{},"sourceType":"module"}